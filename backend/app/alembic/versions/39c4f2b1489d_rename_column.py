"""rename column

Revision ID: 39c4f2b1489d
Revises: 8027b98a61b2
Create Date: 2024-11-06 22:47:14.447548

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision = '39c4f2b1489d'
down_revision = '8027b98a61b2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.drop_column('interview', 'applicant_login')
    op.drop_column('interview', 'interviewer_login')
    op.drop_column('interviewslot', 'user_login')
    
    op.drop_constraint('pk_user_login', 'user', type_='primary')
    op.drop_column('user', 'login')
    op.add_column('user', sa.Column('id', postgresql.UUID(as_uuid=True), default=sa.text('uuid_generate_v4()')))
    # Populate the new columns with UUIDs
    op.execute('UPDATE "user" SET id = uuid_generate_v4()')

    # Set the new_id as not nullable
    op.alter_column('user', 'id', nullable=False)
    # Create primary key constraint
    op.create_primary_key('user_pkey', 'user', ['id'])

    op.add_column('interview', sa.Column('interviewer_id', postgresql.UUID(as_uuid=True), nullable=False))
    op.add_column('interview', sa.Column('applicant_id', postgresql.UUID(as_uuid=True), nullable=False))
    op.create_foreign_key(None, 'interview', 'user', ['interviewer_id'], ['id'])
    op.create_foreign_key(None, 'interview', 'user', ['applicant_id'], ['id'])
    
    op.add_column('interviewslot', sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False))
    op.create_foreign_key(None, 'interviewslot', 'user', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('interviewslot', sa.Column('user_login', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'interviewslot', type_='foreignkey')
    op.create_foreign_key('interviewslot_user_login_fkey', 'interviewslot', 'user', ['user_login'], ['login'])
    op.drop_column('interviewslot', 'user_id')
    op.add_column('interview', sa.Column('interviewer_login', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('interview', sa.Column('applicant_login', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'interview', type_='foreignkey')
    op.drop_constraint(None, 'interview', type_='foreignkey')
    op.create_foreign_key('interview_applicant_login_fkey', 'interview', 'user', ['applicant_login'], ['login'])
    op.create_foreign_key('interview_interviewer_login_fkey', 'interview', 'user', ['interviewer_login'], ['login'])
    op.drop_column('interview', 'applicant_id')
    op.drop_column('interview', 'interviewer_id')
    op.drop_column('user', 'id')
    op.add_column('user', sa.Column('login', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False))
    op.create_primary_key('pk_user_login', 'user', ['login'])
    # ### end Alembic commands ###
